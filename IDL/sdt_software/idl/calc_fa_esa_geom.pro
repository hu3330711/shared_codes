;+
; FUNCTION:
; 	 CALC_ESA_GEOM
;
; DESCRIPTION:
;
;	function to get esa geometry factors
;
; CALLING SEQUENCE:
;
; 	data =  calc_esa_geom(esa_data_struct)
;
; ARGUMENTS:
;
;	esa_data_struct	This is a struct return by a get_?esa_* ()
;			routine.  This must contain the header_bytes
;			and time structure tag.
;
; RETURN VALUE:
;
;	Upon success, an array of floats containing the geometry
;	factor for each energy bin.  else a scaler -1 is returned.
;
; REVISION HISTORY:
;
;	@(#)calc_fa_esa_geom.pro	1.3 04/20/05
; 	Originally written by Jonathan M. Loran,  University of 
; 	California at Berkeley, Space Sciences Lab.   June '96
;-

FUNCTION calc_fa_esa_geom, dat, inst_mode

   ; check for data type

   IF N_ELEMENTS(dat) EQ 0 THEN BEGIN
      PRINT, '@(#)calc_fa_esa_geom.pro	1.3: Input parameter appears not to be filled.  The input'
      PRINT, 'parameter must be generated by one of the functions:  '
      PRINT, '	get_fa_e* () '

      RETURN, -1
   ENDIF 

   tags = TAG_NAMES (dat)
   containsDatName = (WHERE ( tags EQ 'DATA_NAME' ))(0) NE -1     $
     AND (WHERE ( tags EQ 'HEADER_BYTES' ))(0) NE -1              $
     AND (WHERE ( tags EQ 'TIME' ))(0) NE -1

   IF containsDatName LE 0 THEN BEGIN
      PRINT, '@(#)calc_fa_esa_geom.pro	1.3: Input parameter appears not to be filled.  The input'
      PRINT, 'parameter must be generated by one of the functions:  '
      PRINT, '	get_fa_e* ()'

      RETURN, -1
   ENDIF
   
   IF n_elements (dat.header_bytes) LT 44 THEN BEGIN
       PRINT, '@(#)calc_fa_esa_geom.pro	1.3: header_bytes invalid.  esa geom will not be calculated.'
       return, -1.
   ENDIF

   ; get the apid for the data type

   CASE dat.data_name OF
       'Eesa Survey': inst_mode = 0
       'Iesa Survey': inst_mode = 1
       'Sesa Survey': inst_mode = 2
       'Eesa Burst': inst_mode = 3
       'Iesa Burst': inst_mode = 4
       'Sesa 1 Burst': inst_mode = 5
       'Sesa 2 Burst': inst_mode = 6
       'Sesa 3 Burst': inst_mode = 7
       'Sesa 4 Burst': inst_mode = 8
       'Sesa 5 Burst': inst_mode = 9
       'Sesa 6 Burst': inst_mode = 10
       ELSE: BEGIN
           PRINT, '@(#)calc_fa_esa_geom.pro	1.3: Input structure is of the wrong data type.'
           return, -1.
       END
   ENDCASE

   ; the following structure must remain in sync with the C code in esa_geom_struct.h

   args = {time:		0D,					$
           inst_mode:		0L,					$
           nheader_bytes:	0L,					$
           header_bytes:	bindgen(300),				$
           ngeom:		0L,					$
           geom: 		fltarr(10000)				$
          }

   ; and load the values into this struct

   args.time = double(dat.time)
   args.inst_mode = long(inst_mode)
   args.nheader_bytes = long(n_elements(dat.header_bytes))
   args.header_bytes = 	byte(dat.header_bytes)

   flg64 = 1
   lmdle = STRING ('esaIdlUtilLib_3264.so')
   if (!VERSION.RELEASE LE '5.4') then begin
       flg64 = 0
       lmdle = STRING ('esaIdlUtilLib.so')
   endif

   valid = CALL_EXTERNAL (lmdle, 'esa_geom', args)

   IF NOT valid THEN BEGIN
       print, '@(#)calc_fa_esa_geom.pro	1.3: error getting esa geom.'
       return, -1.
   ENDIF

   geom = args.geom(0:args.ngeom-1)

   return, geom

end



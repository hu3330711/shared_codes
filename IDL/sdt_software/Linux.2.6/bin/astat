#!/usr/bin/ksh
#
# KSH SCRIPT:	astat	
#	
# PURPOSE:	Display information about the archive system.
#
# INPUTS:       none
#
#

# Environment setup

. /disks/fast/software/config/archive_config

# Cleanup function

function quitearly {
	if [ -a /tmp/astattmp ] ; then
		rm /tmp/astattmp
	fi
	print
	exit 0
}

# Must run from FINET machine

host=$(uname -n)
if [[ "$host" != "$FINETPRIMARY" && $host != "$FINETBACKUP" ]] ; then
    print "Must run from a FINET machine."
    exit 1
fi

# Set trap for premature exit

trap quitearly EXIT

# Report Header

printf '\n\t\t  >>>>> ARCHIVE SYSTEM STATUS REPORT <<<<<\n\t\t\t%s\n\n' "`date`"
printf "\nARCHIVE PROCESSES\n==============================================================================\n"
printf "%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n" \
	"Program" "ID" "PPID" "Parameter" "User" "Host" "Start"
printf "------------------------------------------------------------------------------\n"

# List the processes on this FINET machine
#  1   2     3      4    5    6  7  8
# PID USER STTIME FNAME PPID CMD/ARGS (fields of ps command)
# PROG ID PARAM USER HOST START (fields of output)

ps -e -o pid= -o user= -o stime= -o fname=0123456789ABCDEF -o ppid -o args |
nawk -v host=$host '
$4 ~ /intercept/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", " ", $2, host, $3)}
$4 ~ /FastCount/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /prepare/ {
	# 8th field is 2nd arg to ksh script
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /sdt/ {
	# Batch file is last field?
	#param = $NF
	#n_parts = split(param, array, "\/")
	# first element is 1st element
	#batch = array[n_parts]
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /backup/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /transfer/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /arecovery/ {
	# arecovery takes no arguments
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", " ", $2, host, $3)}
$4 ~ /cdromunload/ {
	# cdromunload takes no arguments
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", " ", $2, host, $3)
}' -

# Processes on other FINET host

if [[ "$host" = "manitou" ]] ; then
    other_finet="barrow"
else
    other_finet="manitou"
fi
rsh $other_finet ps -e -o pid= -o user= -o stime= -o fname=0123456789ABCDEF -o ppid -o args |
nawk -v host=$other_finet '
$4 ~ /intercept/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", " ", $2, host, $3)}
$4 ~ /FastCount/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /prepare/ {
	# 8th field is 2nd arg to ksh script
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /sdt/ {
	# Batch file is last field?
	#param = $NF
	#n_parts = split(param, array, "\/")
	# first element is 1st element
	#batch = array[n_parts]
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /backup/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /transfer/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /arecovery/ {
	# arecovery takes no arguments
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", " ", $2, host, $3)}
$4 ~ /cdromunload/ {
	# cdromunload takes no arguments
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", " ", $2, host, $3)
}' -

# List the processes on DANET
#  1   2     3      4    5   (6 7 8)
# PID USER STTIME FNAME PPID CMD/ARGS (fields of ps command)
# PPID doesn't correlate across machines

rsh $DANETHOST ps -e -o pid= -o user= -o stime= -o fname=0123456789ABCDEF -o ppid -o args |
nawk -v host=$DANETHOST '
$4 ~ /dbupdate/ {
	# The ID argument is 9 and the CD name is 8, except in call to cutcd
	# 9th field never printed because line too long.
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", $8, $2, host, $3)}
$4 ~ /premaster/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", $8, $2, host, $3)}
$4 ~ /sciplot/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, " ", $8, $2, host, $3)}
$4 ~ /idl/ && $4 !~ /idl_lmgrd/ {
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, $7, $2, host, $3)}
$4 ~ /sdt/ {
	# Batch file last field
	#param = $NF
	#n_parts = split(param, array, "\/")
	# first element is not 0th element
	#batch = array[n_parts]
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)}
$4 ~ /cutcd/ {
	# print ppid in PARAMETER field, pid in ID field.
	# 8th field is ppid passed by intercept from manitou
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $8, " ", $2, host, $3)}
$4 ~ /wtcdwrt/ {
	# print ppid in PARAMETER field, pid in ID field.
	printf("%-10s %-7s %-7s %-21s %-10s %-9s %-10s\n",
	$4, $1, $5, " ", $2, host, $3)
}' -


# Lockfiles

printf "\n\nLOCKFILES\n============================================================\n"
printf "%-30s\t%-12s\t%s\n" "Lock" "User" "Date"
printf "------------------------------------------------------------\n"

ls -l /var/tmp /tmp/holdup* 2>/dev/null |
awk '/holdup/ || /lock/ && $3 !~ /root/ {
	if (substr($9,1,4) == "/tmp") {
	    hold = substr($9,6,30) ; 
	    printf("%-30s\t%-12s\t%s %s %s\n", hold,$3,$6,$7,$8) ;
	}
	else printf("%-30s\t%-12s\t%s %s %s\n", $9,$3,$6,$7,$8) }' -

rsh $DANETHOST ls -l /var/tmp |
awk '/lock/ && $3 !~ /root/ {
	printf("%-30s\t%-12s\t%s %s %s\n", $9,$3,$6,$7,$8) }' -

# CDs left to Cut

printf "\n\nCDs TO BE CUT\n=============\n"
rsh $DANETHOST cat /disks/cdstudio/workdir/ymi_images

# Images and CDs residing on cdstudio

printf "\n\nCDs ON CDSTUDIO\n======================================\n"
printf "%-20s %-20s \n%-20s %-20s \n" \
    "CDs:" "IMAGES:" "-----------------" "-----------------"

set -A fastcds $(rsh $DANETHOST ls -1 /disks/cdstudio/DANET /disks/cdstudio2/DANET | grep FAST | sort -n -tT -k 2)

set -A fastimages $(rsh $DANETHOST ls -1 /disks/cdstudio/images /disks/cdstudio2/images | grep FAST)

n_cds=${#fastcds[*]}
n_img=${#fastimages[*]}
if (($n_cds > $n_img)) ; then n_iters=$n_cds ; else n_iters=$n_img ; fi
i=0
while (($i <= $((n_iters-1)))) ; do
    printf "%-20s %-20s \n" "${fastcds[$i]}" "${fastimages[$i]}"
    let i=$i+1
done

# Disk space cautions

# on danet
printf "\n\nDISK SPACE\n=============================\n"
printf "%s:\n-----------------------------\n" "$DANETHOST"
rsh $DANETHOST '
	df -k /disks/fast;\
	df -k /disks/cdstudio;\
	df -k /disks/cdstudio2;\
	df -k /disks/plasma2/www;\
	df -k /disks/juneau/www;\
	df -k /disks/juneau/cdf1;\
	df -k /disks/juneau/scratch;' |
nawk '
$1 ~ /\/dev\/dsk\/c2t6d0s6/ {
	printf("%-25s%s\n", "/disks/fast", $5)}
$1 ~ /\/dev\/dsk\/c1t3d0s7/ {
	printf("%-25s%s\n", "/disks/cdstudio2", $5)}
$1 ~ /\/dev\/dsk\/c1t1d0s7/ {
	printf("%-25s%s\n", "/disks/cdstudio", $5)}
$1 ~ /plasma2:\/mydisks\/www/ {
	printf("%-25s%s\n", "/disks/plasma2/www", $5)}
$1 ~ /\/dev\/dsk\/c1t2d0s7/ {
	printf("%-25s%s\n", "/disks/juneau/www", $5)}
$1 ~ /\/dev\/dsk\/c1t0d0s7/ {
	printf("%-25s%s\n", "/disks/juneau/cdf1", $5)}
$1 ~ /\/dev\/dsk\/c2t5d0s7/ {
	printf("%-25s%s\n", "/disks/juneau/scratch", $5)
}' -

# on this FINET
printf "-----------------------------\n%s:\n-----------------------------\n" \
"$host"

df -k /fast_data /disks/$host/security |
nawk -v data=`du -ks /fast_data/b/lzp/fast_lzp_@(DSS|GN)* |
		awk '{tot = tot + $1} END {print tot}'` '
$1 ~ /\/dev\/dsk\/c0t2d0s7/ {
	printf("%-25s%s\t\(%s kb in lzpdir\)\n", "/fast_data", $5, data)}
$1 ~ /\/dev\/dsk\/c0t2d0s6/ {
	printf("%-25s%s\n", "security", $5) }' -

# on other FINET

printf "-----------------------------\n%s:\n-----------------------------\n" \
"$other_finet"

rsh $other_finet df -k /fast_data /disks/$other_finet/security |
nawk '
$1 ~ /\/dev\/dsk\/c0t2d0s7/ {
	printf("%-25s%s\n", "/fast_data", $5, data)}
$1 ~ /\/dev\/dsk\/c0t2d0s6/ {
	printf("%-25s%s\n", "security", $5) }' -

exit 0

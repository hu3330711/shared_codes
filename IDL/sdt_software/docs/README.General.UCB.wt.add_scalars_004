************************************************************************

   README.General.UCB.wt.add_scalars_004

   Author: Winston Teitler.

************************************************************************

   Documentation file for the SDT Science Module

       General.UCB.wt.add_scalars_004

************************************************************************

   Add multiple scalar quantities, with a primary input.

************************************************************************

   @(#)README.General.UCB.wt.add_scalars_004	1.1    06/01/05    UCB SSL

************************************************************************





   Contents:



   1. Science Description.

   2. Usage Description.





------------------------------------------------------------------------





   1. Science Description.





    1) This Science Module produces a linear combination of a number of
       input scalar quantities.



       One of the the inputs for the quantities is the primary input.





    2) There can be any number of input quantities to be added; the
       minimum is 1.



       Different quantities must come from different inputs, and
       therefore the number of data inputs must be the same as the
       number of quantities.



       There must always be a primary input, and a corresponding primary
       quantity.





    3) For each input quantity, there is the option of specifying limits
       and ignoring data values beyond the limits.





    4) The user can designate values A, B, C, D, E; and values a(i),
       b(i), c(i), for each input quantity ("i" represents an input data
       quantity index).



       If the values of the quantities are

           v1, v2, ...

       then what is computed is

           Output value =
               A * {[a1 * (v1 - b1 - B) - c1 - C] +
                    [a2 * (v2 - b2 - B) - c2 - C] +
                    ... +
                    [an * (vn - bn - B) - cn - C] -
                    D} -
               E



       A, B, C, D, E, are referred to as "numeric parameters for all the
       quantities".


       a(i), b(i), c(i), are referred to as "numeric parameters for each
       quantity".





    5) An output data point is produced for each input point of the
       primary input.



       The time tag for the output data point is the same as that for
       the corresponding primary input data point.





    6) For an output data point to be produced, it must be in the time
       interval defined by two input data points of each secondary
       input (these are distinct intervals).



       Each secondary quantity for the time of the output data point is
       obtained by linear interpolation.



       However, if the time interval between the two input data points
       is larger than a chosen value, this is considered to be a data
       dropout.





------------------------------------------------------------------------





   2. Usage Description.





    1) This Science Module can operate in Data Analysis mode only.





    2) There must be the following command-line arguments:



           None.





    3) There must be the following user parameters:



            1) Dump frequency for the output data points.


               Int.


               Must be one of the following:


                    0     =  Do not dump.

                    >= 1  =  Dump output data points with indices of:
                             0, n, 2n, 3n, ...  (where n is the chosen
                             dump frequency).



            2) Number of data quantities.


               Int.


               Must be  >=  1.



            3) The group of parameters described here occurs once
               for each of the following values, in succession (numeric
               parameters for all the quantities):

               Parameter A.

               Parameter B.

               Parameter C.

               Parameter D.

               Parameter E.



                1) Parameter value.


                   Double.



            4) The group of parameters described here occurs once for
               the primary quantity; and once for each of the secondary
               data quantities, in the order of the corresponding
               inputs.



                1) Dropout time.


                   Double.


                   Units are seconds.


                   Must be  >  0.


                   This parameter should be present for the secondary
                   data quantities, but not for the primary quantity.



                2) Input component index.


                   Int.



                3) Flag for limits.


                   Int.


                   Must be one of the following:


                       WT_TRUE   =  Use limits for input values.

                       WT_FALSE  =  Do not use limits for input values.



                4) Lower limit.


                   Double.



                5) Upper limit.


                   Double.



               If the flag for limits is true, then  the lower limit
               must be  <=  the upper limit.



                6) The group of parameters described here occurs once
                   for each of the following values, in succession
                   (numeric parameters for each quantity):

                   Parameter a.

                   Parameter b.

                   Parameter c.



                    1) "Fill code" for the parameter.


                       Int.


                       This code indicates how to fill the "final" value
                       for the parameter (i.e., the value that will be
                       actually used).


                       Must be one of the following:


                           WT_SM_PARM_USR       =
                               Set the final value from the "user" value
                               for this parameter for this quantity
                               (i.e., the value entered by the user).


                           WT_SM_PARM_COPY_USR  =
                               Set the final value by copying the user
                               value from another quantity.


                           WT_SM_PARM_COPY_VAL  =
                               Set the final value by copying the final
                               value from another quantity.


                       If the final parameter value is copied from a
                       value for a different quantity, then the user
                       value for the current data quantity (entered
                       below) is ignored.

                       The copy is made from the appropriate value for
                       the corresponding parameter for the other
                       quantity (e.g., the value for "a" for the current
                       data quantity is copied from a value for "a" from
                       the other data quantity).



                    2) "Copy" index for the parameter.


                       Int.


                       This is the index of the quantity from which to
                       copy a value, for the final value of the present
                       quantity.


                       If the "fill code" is to copy the final parameter
                       value, from a value for a different quantity,
                       then
                       must be  >=  0  and  <  the index for the
                       "current data quantity" (the data quantity for
                       which the parameter values are to be set).

                       The first data quantity has index 0.  That is the
                       primary quantity.



                    3) Parameter value.


                       Double.


                       This is the "user" value for the parameter.





    4) The following input data files are used:



           None.





    5) There must be the following input data quantities:



            1) The data inputs for the data quantities.


               Each of these inputs consists of a time series (Standard
               data type); the following components are required, and
               must be of the indicated types:


                1) Time.

                   Double.

                   Must be component 0.


                2) One additional component for the scalar value.

                   Float.


               The first data input is the primary one.





    6) The output data quantity is a time series (Standard data type)
       and consists of the following components:



            1) Time.


               Double.



            2) The sum (linear combination) of the input data
               quantities.


               Float.

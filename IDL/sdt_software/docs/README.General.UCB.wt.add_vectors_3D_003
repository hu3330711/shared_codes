************************************************************************

   README.General.UCB.wt.add_vectors_3D_003

   Author: Winston Teitler.

************************************************************************

   Documentation file for the SDT Science Module

       General.UCB.wt.add_vectors_3D_003

************************************************************************

   Add multiple vector quantities in 3D by time match.

************************************************************************

   @(#)README.General.UCB.wt.add_vectors_3D_003	1.1    06/01/05    UCB SSL

************************************************************************





   Contents:



   1. Science Description.

   2. Usage Description.





------------------------------------------------------------------------





   1. Science Description.





    1) This Science Module produces a linear combination of a number of
       input vector quantities.



       The inputs for the quantities must have matching times.





    2) Since the vector components are simply added as they are, i.e.,
       no rotations are performed; the result will be meaningful only if
       all the vector quantities are referred to the same coordinate
       system.





    3) There can be any number of input quantities to be added; the
       minimum is 1.

       Different quantities may be data components of the same or of
       different inputs.

       However, all components of a vector input quantity must be data
       components of the same input.



       There must be enough data inputs for all the input quantities.

       Every input for data quantities must in fact be used, i.e., there
       must be at least one data quantity for every such input.

       Since different quantities may come from a same input, the number
       of data inputs may be smaller than the number of quantities.





    4) For each input quantity, there is the option of specifying limits
       and ignoring data values beyond the limits.



       If limits are used for a quantity, then all the components of the
       vector that make up the quantity must have values within the
       limits, or else the entire vector is considered invalid.





    5) The user can designate values A, B, C, D, E; and values a(i),
       b(i), c(i), for each input quantity ("i" represents an input data
       quantity index).

       A is a scalar; B, C, D, E, are vectors referred to the same
       coordinate system as the input quantities.

       a(i) is a scalar; b(i), c(i), are vectors referred to the same
       coordinate system as the input quantities.



       If the values of the quantities are

           v1, v2, ...

       where of course v1, v2, ... are vectors,

       then what is computed is

           Output vector =
               A * {[a1 * (v1 - b1 - B) - c1 - C] +
                    [a2 * (v2 - b2 - B) - c2 - C] +
                    ... +
                    [an * (vn - bn - B) - cn - C] -
                    D} -
               E



       A, B, C, D, E, are referred to as "numeric parameters for all the
       quantities".


       a(i), b(i), c(i), are referred to as "numeric parameters for each
       quantity".





    6) An output data point is produced for each successful match
       containing a data point of each of the inputs for data
       quantities; provided that all the quantities have valid values
       (if limits are specified).



       The time tag for the output data point is a weighted average of
       the time tags of the input data points participating in the
       match.



       The weights for the average for the output time tag are specified
       by the user.

       All the weights must be zero or positive.



       The user has a choice to have the weights applied as they are,
       each weight to its corresponding input data point; or to have
       each weight multiplied by the number of data quantities that come
       from its corresponding input.





    7) The user can specify a separate maximum time separation for each
       input to be matched; larger time separations between consecutive
       input data points are considered to be data dropouts.





    8) The user can specify a tolerance factor for the time matching.





------------------------------------------------------------------------





   2. Usage Description.





    1) This Science Module can operate in Data Analysis mode only.





    2) There must be the following command-line arguments:



           None.





    3) There must be the following user parameters:



            1) Dump frequency for the output data points.


               Int.


               Must be one of the following:


                    0     =  Do not dump.

                    >= 1  =  Dump output data points with indices of:
                             0, n, 2n, 3n, ...  (where n is the chosen
                             dump frequency).



            2) Number of data inputs.


               Int.


               Must be  >=  1.



            3) Number of data quantities.


               Int.


               Must be  >=  the number of data inputs, as each data
               input must be used for at least one data quantity but can
               be used for more than one.



            4) The group of parameters described here occurs once for
               each data input.



                1) Weight for output time tag.


                   Double.


                   Must be  >=  0.



               The sum of the weights (each multiplied by the
               corresponding number of data quantities, if applicable)
               must be  >  0  (not necessarily 1).



                2) Maximum time separation for consecutive input data
                   points.


                   Double.


                   Units are seconds.


                   Must be  >  0.



            5) Tolerance factor for time match.


               Double.


               Must be  >  0  and  <  1/2.



            6) Flag for multiplying the time tag weights by the number
               of quantities.


               Int.


               Must be one of the following:


                   WT_TRUE   =  Multiply the weight for the time tag of
                                each input by the number of quantities
                                from that input.

                   WT_FALSE  =  Do not multiply the weights.



            7) The group of parameters described here occurs once
               for each of the following values, in succession (numeric
               parameters for all the quantities, scalar):

               Parameter A.



                1) Parameter value.


                   Double.



            8) The group of parameters described here occurs once
               for each of the following values, in succession (numeric
               parameters for all the quantities, vector):

               Parameter B.

               Parameter C.

               Parameter D.

               Parameter E.



                1) The group of parameters described here occurs once
                   for each of the components of the vector parameter.



                    1) Component value.


                       Double.



            9) The group of parameters described here occurs once for
               each of the data quantities.



                1) Input index for the quantity.


                   Int.



                2) The group of parameters described here occurs once
                   for each of the vector components of the quantity.



                    1) Input component index.


                       Int.



                3) Flag for limits.


                   Int.


                   Must be one of the following:


                       WT_TRUE   =  Use limits for input values.

                       WT_FALSE  =  Do not use limits for input values.



                4) Lower limit.


                   Double.



                5) Upper limit.


                   Double.



               If the flag for limits is true, then  the lower limit
               must be  <=  the upper limit.



                6) The group of parameters described here occurs once
                   for each of the following values, in succession
                   (numeric parameters for each quantity, scalar):

                   Parameter a.



                    1) "Fill code" for the parameter.


                       Int.


                       This code indicates how to fill the "final" value
                       for the parameter (i.e., the value that will be
                       actually used).


                       Must be one of the following:


                           WT_SM_PARM_USR       =
                               Set the final value from the "user" value
                               for this parameter for this quantity
                               (i.e., the value entered by the user).


                           WT_SM_PARM_COPY_USR  =
                               Set the final value by copying the user
                               value from another quantity.


                           WT_SM_PARM_COPY_VAL  =
                               Set the final value by copying the final
                               value from another quantity.


                       If the final parameter value is copied from a
                       value for a different quantity, then the user
                       value for the current data quantity (entered
                       below) is ignored.

                       The copy is made from the appropriate value for
                       the corresponding parameter for the other
                       quantity (e.g., the value for "a" for the current
                       data quantity is copied from a value for "a" from
                       the other data quantity).



                    2) "Copy" index for the parameter.


                       Int.


                       This is the index of the quantity from which to
                       copy a value, for the final value of the present
                       quantity.


                       If the "fill code" is to copy the final parameter
                       value, from a value for a different quantity,
                       then
                       must be  >=  0  and  <  the index for the
                       "current data quantity" (the data quantity for
                       which the parameter values are to be set).

                       The first data quantity has index 0.



                    3) Parameter value.


                       Double.


                       This is the "user" value for the parameter.



                7) The group of parameters described here occurs once
                   for each of the following values, in succession
                   (numeric parameters for each quantity, vector):

                   Parameter b.

                   Parameter c.



                    1) "Fill code" for the parameter.


                       Int.


                       Similar to the above.



                    2) "Copy" index for the parameter.


                       Int.


                       Similar to the above.

                       The first data quantity has index 0.



                    3) The group of parameters described here occurs
                       once for each of the components of the vector
                       parameter.



                        1) Component value.


                           Double.


                           This is the "user" value for the component.





    4) The following input data files are used:



           None.





    5) There must be the following input data quantities:



            1) The data inputs for the data quantities.


               Each of these inputs consists of a time series (Standard
               data type); the following components are required, and
               must be of the indicated types:


                1) Time.

                   Double.

                   Must be component 0.


                2) One or more sets of 3 additional components, one set
                   for the values of the vector components of each data
                   quantity.

                   Float.





    6) The output data quantity is a time series (Standard data type)
       and consists of the following components:



            1) Time.


               Double.



            2) Component 1 of the sum (linear combination) of the input
               data quantities.


               Float.



            3) Component 2 of the sum (linear combination) of the input
               data quantities.


               Float.



            4) Component 3 of the sum (linear combination) of the input
               data quantities.


               Float.



            5) Magnitude of the sum (linear combination) of the input
               data quantities.


               Float.


Using the Batch Version of SDT:
------------------------------


INTRODUCTION:
------------

There is a version of the SDT software which allows users to run "batch"
jobs, with predetermined plots and timespans.  The name of this program
is:

    sdt_batch

This program is advantageous in the following ways:

1.  You do not have to bring up the interactive version ("sdt" itself)
    which saves time in creating new configurations or selecting and
    bringing up new configurations.  "sdt_batch" does, however, make
    use of pre-existing plot configurations, generated by "sdt".

2.  "sdt_batch" can handle any number of different timespans in
    succession, so that an overnight run can produce a template series
    of plots over several different time spans or data files.  No
    intervention by the user is required after "sdt_batch" has been
    started.

As of 96/06/06, "sdt_batch" can be run from a non-X terminal, IF
you are willing to create very large plot files.   If you run
from an Xserver, "sdt_batch" will automatically create bitmap
files in situations where many vectors would otherwise be output.
This saves many MBytes of spool file space.  In Polar, it is easy to
generate 50 to 60 MByte Postscript vector files without this capability.
The bitmapped version of the plots are typically less than 2 MBytes.

In order to run from a non-X server, be sure that there is no
DISPLAY environment variable.  You can insure this by entering:

    unsetenv DISPLAY

before you run "sdt_batch".  When run in this mode, all plot
output will be vectorized (and thus may become very large).

If you are running from and X-server, you need to be sure that the
DISPLAY environment variable is correctly set to the address of
the console you are running from.  When run in this mode, "sdt_batch"
will bitmap anything that would create over .5 million vectors otherwise.


PROGRAM USE:
-----------

The batch version is used in the following way:

    sdt_batch  batch_control_file

where "batch_control_file" is the name of the "Batch Control File".
The following section describes the format of the "Batch Control File".



BATCH CONTROL FILE:
------------------

The Batch Control File for a run of "sdt_batch" is used to input all
of necessary information for the run.  It is an ASCII file and contains
the following lines.  Note that not all of these lines are required and
the order is usually not important.

1.  Batch Job Identification Line

    This is usually the first line in the Batch Control File and has
    the following format:

       BatchJob:   NameOfBatchJob

    where "NameOfBatchJob" is any user selected name for the job.
    It should be acurately descriptive of the intent of the job,
    for instance:   "Fast Standard House Keeping Survey"

    Note that, if "NameOfBatchJob" contains whitespace, it should be
    entered within double quotes.

2.  Printer Identification Line

    This line contains the name of the network printer on which plots
    will be output by the batch run.  It has the following format:

       Printer:   NameOfPrinter

    If this line is NOT included in the Batch Control File, then there
    will be no hardcopy.  If the "FileDestination" data in:

        Plot OutputFile Line

    is defined (see (4)), and the Printer is not, then "sdt_batch" will
    send plot output to disk files and avoid printing it.  If both are
    defined, then plot output will be sent to a printer AND to disk.

    Note that all plot output (printers and files) is turned OFF by the:

	Disable Plot Output Line

    ("NoPlots").  See (20) for details.

3.  Plot Output Format Description Line

    This line contains the name of the plot output format to use.  Note
    that this entry MUST be compatible with the printer selected in
    the "Printer Identification Line".  There are, as of May 1997,
    these possibilities:

	Output:   PostScript
	Output:   ColorPostScript
	Output:   ColorPostScriptL2
	Output:   GIF
	Output:   ColorGIF
	Output:   Hp_7475
	Output:   Hp_7550
	Output:   Hp_7570
	Output:   Hp_7580
	Output:   Hp_7585
	Output:   Hp_7586
	Output:   Hp_7595
	Output:   Hp_7596
	Output:   Hpljet

    If this line is NOT included in the Batch Control File, the format
    of plot output will default to that listed in:

	UI.Config.dat

    which resides in $FASTCONFIG/sdt_cfg or $FASTLIB/sdt_cfg.

    NOTE:  The most important difference between "ColorPostScript" and
	   "ColorPostScriptL2" is that the Level 2 version of PostScript
	   contains an efficient way to store color images.  Thus,
	   a plot page with a lot of color rectangles (i.e. detailed
	   spectrograms) can be represented by a much smaller PostScript
	   file than the older, Level 1 version of Postscript.  However,
	   many devices still only support Level 1, so both options are
	   provided in the batch interface.

4.  Plot OutputFile Line

    This line should ONLY be included if you wish to have the plot
    output sent to a disk file instead of, or as well as, a printer.
    Use of this line will insure that plot output is sent to a file.
    It has the following formats:

       FileDestination:   NameOfOutputFile
       FileDestination:   NameOfOutputFile  ByDate
       FileDestination:   NameOfOutputFile  ByHour
       FileDestination:   NameOfOutputFile  ByMinute
       FileDestination:   NameOfOutputFile  BySecond
       FileDestination:   NameOfOutputFile  TypeOfOutput
       FileDestination:   NameOfOutputFile  TypeOfOutput  ByDate
       FileDestination:   NameOfOutputFile  TypeOfOutput  ByHour
       FileDestination:   NameOfOutputFile  TypeOfOutput  ByMinute
       FileDestination:   NameOfOutputFile  TypeOfOutput  BySecond

    where "NameOfOutputFile" is the name of the file which you wish
    to receive the plot output.  If it does not exist when the batch
    run starts, it will be created.

    The use of "TypeOfOutput" indicates which type of output will be
    sent to the disk file.  See (3) for a list of the available output
    types.  It overrides the value given in:

        Plot Output Format Description Line

    Note that use of "TypeOfOutput" also allows a batch job to send
    output to a PostScript plotter, and, at the same time, create
    the same output in a disk file in a different format - GIF for
    instance.  So it is worth noting that use of this line and the
    "Printer Identification Line" will result in output being sent
    to both destinations.

    The optional Key words:  ByDate, ByHour, ByMinute, BySecond
    are provided, as of May 1997, to allow the batch program to
    generate a different set of output files for each timespan
    in the Batch Control File, as follows:

       ByDate:
      
	      NameOfOutputFileYYYYMMDD

          where YYYYMMDD is the standard date notation ("19970101" is
	  Jan 1, 1997, for instance) of the starting date of the time
	  span.

       ByHour:

	  As for "ByDate", except the starting hour is also represented
	  in the name, so that the output filenames are of the form:

	      NameOfOutputFileYYYYMMDDHH

       ByMinute:

	  As for "ByHour", except the starting minute is also represented
	  in the name, so that the output filenames are of the form:

	      NameOfOutputFileYYYYMMDDHHMM

       BySecond:

	  As for "ByMinute", except the starting second is also
	  represented in the name, so that the output filenames are of
	  the form:

	      NameOfOutputFileYYYYMMDDHHMMSS

    Note that all plot output (to disk or to a printer) is turned OFF
    by the:

	Disable Plot Output Line

    See (20) for details.

5.  Page Size Line

    This line indicates what the paper size for printer output will be.
    Note that this value should be one of the paper sizes supported
    by the selected printer in the Printer Identification Line.  The
    Page Size Line has the following format:

	PageSize:  PSize

    where "PSize" can be one of the following strings:

	ASize
	BSize
	CSize
	DSize
	ESize
	A4Size
	A3Size
	A2Size
	A1Size
	A0Size

    If this line is NOT included in the Batch Control File, the PageSize
    will default to that listed in:

	UI.Config.dat

    which resides in $FASTCONFIG/sdt_cfg or $FASTLIB/sdt_cfg.

6.  Plots Per Page Line

    This line indicates how many plots per page of output you wish to use.
    It has the following format

       PlotsPerPage:   N

    where "N" is an integer greater than or equal to 1.

    If this line is NOT included in the Batch Control File, the
    PlotsPerPage value is defaulted to:

	8

7.  Plot Orientation Line

    This line indicates whether to PORTRAIT or LANDSCAPE for plot
    output.  It has the following format:

	Orientation:  portrait

	    or

	Orientation:  landscape

    If this line is NOT included in the Batch Control File, the
    Orientation will default to that listed in:

	UI.Config.dat

    which resides in $FASTCONFIG/sdt_cfg or $FASTLIB/sdt_cfg.

8.  Preserve Page Aspect Ratio Line

    This line indicates that all plots on a page should be scaled
    so that the aggregate of all the plots fit to a standard overall
    portion of the paper.  This line has the following format:

	PreserveAspect:

    Note that this is the default mode of page output.

9.  Fill Entire Page Line

    This line indicates that the plots on a page of paper should
    be scaled so that the maximum amount of the paper is used.
    This line has the following format:

	FillPage:

    If not included in the Batch Control File, the "PreserveAspect"
    page mode is used.

10. Page Tag Description Line

    This line indicates what line of text should be placed at the
    bottom of each plot page for identification purposes.  It has
    the following format:

	PageTag:  Id

    where "Id" is a string.  If "Id" contains whitespace, it should
    be included withing double quotes.

    If not included in the Batch Control File, no page tag is output
    on the plot pages.

11. Plot Length Line

    This line can be used to insure that plot panels will be of an
    exact length.  If this line is not used, the plots will be scaled
    to very near the maximum possible length allowed by the paper
    size.  This line has the following possible formats:

	PlotLength:  Value  
	PlotLength:  Value  millimeters
	PlotLength:  Value  inches

    where: "value" is either an integer or floating point number,
    representing "millimeters" or "inches", as shown.

    If the line does not contain the "millimeters" or "inches" designator,
    then "value" is assumed to represent "millimeters".

    The user must take care that a requested Plot Length will not be
    longer that the page size can realistically represent.

12. Pixel Image Dimension Line

    This is only relevent to the following types of output:

	GIF
	ColorGIF

    This line indicates the width and height of the images, in pixels,
    that the batch process will create.  The line has the following
    format:

	PixelDims:   width  height

    where "width" will be the number of pixels wide and "height" will
    be the number of pixels in height.

13. Pixel Linear Resolution Adjustment

    As of 2000/11/25, this is only relevent to the following types
    of output:

	ColorPostScriptL2

    This value is used to create plot files of smaller size,
    at the possible expense of pixel resolution.  It is defined as
    follows:

	PlotPixLenRes:  1.0   (full resolution)

	PlotPixLenRes:  2.0   (1/2 linear resolution or about 1/4
			       size of full resolution file)

	PlotPixLenRes:  3.0   (1/3 linear resolution or about 1/8
			       size of full resolution file)

	PlotPixLenRes:  4.0   (1/4 linear resolution or about 1/12
			       size of full resolution file)

    Initial use indicates that a value of 2.0 results in no visible
    degradation of output appearance.

14a.  Data File Dump PlotName Vs. Indexing Flag Line

    See 14b. for more information -
    
    Previous to November 1998, "sdt_batch", when creating data dump
    files, would include the input PlotNames in the names of the output
    files.  This would result in filenames of unwieldy length.  

    In order to provide an alternative naming method that results in
    file names of shorter length, "sdt_batch" will now create files
    using unique (and small) indices, in place of the PlotNames.  The
    filenames are shorter, but there is no indication, in the filenames
    as to the data content.

    In order to tell "sdt_batch" to use unique indices in the output
    data filenames, include the line:

	FileDumpUseIndexing

    in the batch control file.  You must place this line just BEFORE
    the "Data File Dump Line" (see the following section:  14b).

    When this line is not included, the PlotName will be used in
    output filenames.

14b.  Data File Dump Line

    This line should ONLY be included if you wish to have the data
    generated by the batch job to be output into a data file.  This is
    in addition to any plots that are generated, either as hardcopy or
    plot files.
    As of 96/02/05, the following types of data files are supported:

	ASCII            - all data in one file
	ASCII            - each plot is a separate file
	CDF              - all data in one file
	UCLA Flat Files  - each plot is a separate file

   This line has the following formats:

       DataOutputFile:  OutputFileName  TypeOfData
       DataOutputFile:  OutputFileName  TypeOfData  ByDate
       DataOutputFile:  OutputFileName  TypeOfData  ByHour
       DataOutputFile:  OutputFileName  TypeOfData  ByMinute
       DataOutputFile:  OutputFileName  TypeOfData  BySecond

   where:

	OutputFileName is the name of the file to receive the data.

	TypeOfData is one of the following:

	    AsciiEntire
	    AsciiSeparate
	    Flat
	    CDF

   When generated, and if none of the optional key words (ByDate, ByHour,
   ByMinute, BySecond) are used, the output files have the following
   names:

       AsciiEntire:

	   OutputFileName

       AsciiSeparate:

	   OutputFileName (contains a list of the generated files)

	       and

	   for each plot:

	      a)  If you have set the FileDumpUseIndexing flag (see 14a),
		  you will get filenames of the form:
	      
		      OutputFileName.idx

		  where "idx" is a concatenation of one or more integers,
		  separated by "_".

	      b)  Otherwise, you get filenames of the form:

		      OutputFileName.PlotName

		  where PlotName is the name of the plot.


       CDF:

	   OutputFileName.cdf (contains a list of the generated files)

	       and

	   for each plot:

	      a)  If you have set the FileDumpUseIndexing flag (see 14a),
		  you will get filenames of the form:
	      
		      OutputFileName.cdf.idx

		  where "idx" is a concatenation of one or more integers,
		  separated by "_".

	      b)  Otherwise, you get filenames of the form:

		      OutputFileName.cdf.PlotName

		  where PlotName is the name of the plot.

       Flat:

           for each plot:

	       OutputFileName.NameOfPlot.UnNamed.ffd
	       OutputFileName.NameOfPlot.UnNamed.ffh

	      a)  If you have set the FileDumpUseIndexing flag (see 14a),
		  you will get filenames of the form:
	      
	              OutputFileName.idx.UnNamed.ffd
	              OutputFileName.idx.UnNamed.ffh

		  where "idx" is a concatenation of one or more integers,
		  separated by "_".

	      b)  Otherwise, you get filenames of the form:

	              OutputFileName.NameOfPlot.UnNamed.ffd
	              OutputFileName.NameOfPlot.UnNamed.ffh

		  where PlotName is the name of the plot.


   The optional Key words:  ByDate, ByHour, ByMinute, BySecond
   are provided, as of May 1997, to allow the batch program to
   generate a different set of output files for each timespan
   in the Batch Control File, as follows:

      ByDate:
      
	  For "AsciiEntire",  the generated filename will be

	      OutputFileNameYYYYMMDD

	  For "AsciiSeparate",  the generated filenames will be

	       OutputFileNameYYYYMMDD.PlotName

	  For "CDF",  the generated filenames will be

	       OutputFileNameYYYYMMDD.PlotName.cdf

	  For Flat files,  the generated filenames will be

	       OutputFileNameYYYYMMDD.NameOfPlot.UnNamed.ffd
	       OutputFileNameYYYYMMDD.NameOfPlot.UnNamed.ffh

          where YYYYMMDD is the standard date notation ("19970101" is
	  Jan 1, 1997, for instance) of the starting date of the time
	  span.

      ByHour:

	  As for "ByDate", except the starting hour is also represented
	  in the name, so that the inserted string is of the form:

	       YYYYMMDDHH

      ByMinute:

	  As for "ByHour", except the starting minute is also represented
	  in the name, so that the inserted string is of the form:

	       YYYYMMDDHHMM

      BySecond:

	  As for "ByMinute", except the starting second is also
	  represented in the name, so that the inserted string is of
	  the form:

	       YYYYMMDDHHMMSS


Data-Directory, TimeSpan Description Lines:

As of October 1996, the Batch Control File can contain any number
of Data-Directory, TimeSpan groupings.  This will allow "sdt_batch"
to sequentially process data sets from many different disk locations.
Typically, the Batch Control File will have one or more groups of lines,
each group starting with a "Data Directory Line", followed by one or
more TimeSpan lines.  



15. Data Directory Line

    This line indicates where the batch run should look for data and
    MUST BE included in the Batch Control File.  It has the following
    format:

	DataDirectory:  DirectoryName

    where "DirectoryName" is the pathname of the directory containing
    the data files to be plotted.

    NOTE:  For FAST PPS data, the DirectoryName should be the name of
           the directory which contains the sub-directory corresponding
	   to the pass of interest.  For instance, if you wish to run
	   a batch job over the apid files in pass directory:

	      /disks/bishma/disk1/sdt/fast_lzp/fast_lzp_DSS-16_orbit0025_r

	   your Data Directory Line should be:

	      DataDirectory:  /disks/bishma/disk1/sdt/fast_lzp

	   Do NOT include the "fast_lzp_DSS-16_orbit0025_r" as part
	   of the directory, even though it actually contains the APID
	   files.  "sdt" thinks of "fast_lzp_DSS-16_orbit0025_r" as a
	   single data set.  The "fast_lzp_DSS-16_orbit0025_r" will
	   be specified in the "TimeSpan Line".

16. TimeSpan Line(s)

    This line specifies what data file or data set is to be used.  It
    is used in conjunction with the "Data Directory Line" to uniquely
    identify which data to use in the batch run.  Note that there MUST
    BE at least one "TimeSpan Line" in the Batch Control File.  Note also
    that there may be more than one "TimeSpan Line" in the Batch Control
    File.  The batch job is run on each time span, corresponding to
    a "TimeSpan Line", in succession.

    The "TimeSpan Line" has the following formats:

       TimeSpan:  filenames  startdate  starttime  enddate  endtime

       TimeSpan:  filenames  startdate  starttime  endtime

       TimeSpan:  filenames  starttime  endtime

       TimeSpan:  filenames

    where:
    
	"filename" is either the name of one data file to be used or
	     is a consolidation of several data files in the form:

	         { filename1 filename2 ... }

	     If more than one filename is used, then the braces are
	     required.  Use of the multi-filename format is mostly
	     for use by FAST.  It is NOT required usage for WIND or
	     other spacecraft where there is a strong correlation
	     between date/time stamp and filename - even when the
	     requested TimeSpan requires multiple data files.

	     Note also that if the first character of a filename
	     is "/", then the filename is assumed to be a full
	     pathname and the "DataDirectory" field is not used.
	     If the first character is not "/", then the full
	     pathname is assumed to be "DataDirectory", followed
	     by "filename".

	"startdate"  is the date stamp of the (Greenwich) day
	     for which to start running the data.  Date stamps
	     have the form:

		yy/mm/dd  or yyyy/mm/dd

	"starttime"  is the time stamp of the (Greenwich) time
	     for which to start running the data.  Time stamps
	     have the form:

		hh:mm   or  hh:mm:ss

	"enddata"  is the date stamp of the (Greenwich) day
	     of the last instant of data to be run.  Date stamps
	     have the form:

		yy/mm/dd  or yyyy/mm/dd

	"endtime"  is the time stamp of the (Greenwich) time
	     of the last instant of data to be run.  Time stamps
	     have the form:

		hh:mm   or  hh:mm:ss

    Notes:

	If no date or time stamps are given, then the entire time
	span of "filename" is assumed.

	If a "startdate" is used but not an "enddate", then the
	"endtime" stamp is assumed to be relative to "startdate".

	If neither "startdate" or "enddate" is used, but "starttime"
	and "endtime" are used, it is assumed that they are relative
	to midnight GMT of the day of the start of the data in
	"filename".

	Any specified date/time information must make sense - i.e.
	you can not have and end date/time stamps that precedes
	the start date/time stamp.

	Time stamps of greater than 24:00 are admissible.

    Other Notes:

        For Geotail, Geotail Survey, and, probably later, Polar, the
	following formats are also admissible:

            TimeSpan:  startdate  starttime  enddate  endtime

            TimeSpan:  startdate  starttime  endtime

	Since ISTP has a standard data file naming convention based
	on date, it is enough, in these cases, to specify time only.

    FAST NOTE:  For FAST PPS data, the name of the pass directory
	should be used as the "filename" argument in this line.
	For instance, if you wish to run a batch job over the apid
	files in pass directory:

	    /disks/bishma/disk1/sdt/fast_lzp/fast_lzp_DSS-16_orbit0025_r

	your Data Directory Line should be:

	    DataDirectory:  /disks/bishma/disk1/sdt/fast_lzp

	and your TimeSpan Line should be:

	    TimeSpan:  fast_lzp_DSS-16_orbit0025_r

	(in this case, the entire file will be processed).

17. Plot Configuration Directory Line

    This line specifies where the SDT plot-configuration directory
    of interest is and MUST BE included in the Batch Control File.
    It has the following format:

	PlotConfigurationDir:   plot_config_dir

    where "plot_config_dir" is the directory containing the
    plot configuration of interest (see 18.  Plot Configuration File
    Line).  One and ONLY one "Plot Configuration Directory Line"
    should be included in the Batch Control File.

18. Plot Configuration File Line(s)

    This set of lines specify which SDT plot-configurations you wish to
    process with and MUST BE included in the Batch Control File.  Each
    line has the following format:

	PlotConfigurationFile:   plot_config_file

    where "plot_config_file" is an abbreviation for the following
    SDT plot configuration file (see 17. Plot Configuration Directory
    Line):

	plot_config_dir/UIcfg.plot_config_file

    Note that the values for:

	plot_config_dir

	   and

	plot_config_file

    are substituted into this name.

    Notes:

        As of 2001/09/23, more than one configuration file can
	be listed and processed by SDT.  This is especially
	valuable for CLUSTER, since all four spacecraft can,
	in one batch run, create too much data for many machines.
	By use of multiple "Plot Configuration File Line"'s, the
	processing can be split up on a spacecraft by spacecraft
	basis, reducing the memory load on the machine as it computes.

	When multiple Plot Configurations are used, the default
	order of execution is to process all TimeSpans for the
	first configuration, then all of the same TimeSpans for
	the second configuration, and so on.  This order can
	be changed including  the line:

	    PlotsGroupedByTimeSpan:

        in the Batch Control File.   If this line exists, the
	order of execution will be to process all plot configurations
	for the first TimeSpan, than all of the plot configurations
	for the second TimeSpan and so on.

	For the sake of completion, the line:

	    PlotsGroupedByConfiguration:

        can be included in the Batch Control File, to indicate to
	execution in the default order.


	Note that all configuration files must be in the same
	"Plot Configuration Directory".

	"UIcfg.plot_config_file" must contain plots for one and ONLY
	one spacecraft.  Configurations containing more than one
	spacecraft are not permitted.

	"UIcfg.plot_config_file" may contain "realtime" or "standard"
	plot windows.  "sdt_batch" treats them all as "standard"
	windows.

	Any time span information in "UIcfg.plot_config_file" is
	ignored.  All time span information used comes from the
	"TimeSpan Line"'s.

	Plot limits and other attributes are used from the plot
	entries within "UIcfg.plot_config_file".

19. Parameter Definition Lines
       
    These lines are used only to enter parameters for Science Modules
    that are used by the selected Plot Configuration (see 18. Plot
    Configuration File Line).  They have the following formats:

	Parameter:  ParamName  Char    Sval

	Parameter:  ParamName  Int     Ival

	Parameter:  ParamName  Double  Dval

    where:

       ParamName is the name of the parameter.  If it includes
       whitespace,  it should be imbedded in double quotes.

       Char indicates that the following argument (Sval) is a
       text string.

       Int indicates that the following argument (Ival) is an
       integer.

       Double indicates that the following argument (Dval) is a
       double.

20. Disable Plot Output Line.

    In some cases, a user may wish to run a batch job without actually
    getting printer output.  This may be the case if, for instance, the
    configuration contains a Science Module which produces an ASCII file.
    A user can disable plot output by including the following line:

	NoPlots:

    Use of this line also inhibits the output of plots to files.

    Here is a description of what happens to the plot output produced
    by "sdt_batch" in the following situations:

    If "NoPlots" is ON, no plot output, either to a printer or
	to disk files is produced, regardless of "FileDestination"
	or "Printer" settings.

    If "NoPlots" is OFF, then:

	(a)  If "Printer" is defined and "FileDestination" is not
	     defined, then plots will be sent only to the printer.

	(b)  If "Printer" and "FileDestination" are both defined,
	     output will go to both the printer and to disk.

	(c)  If "Printer" is not defined and "FileDestination" is
	     defined, plots will be sent to disk, but not to a
	     printer.

	(d)  If neither "Printer" nor "FileDestination" is defined,
	     no plots will be output.

21. AutoScaling Line.

    This entry will invoke auto-scaling, in the Y-axis, on ALL time-
    series, line plots produced by the Plot Configuration.  It overrides
    the AutoScale initializations in the Plot Configuration File, for
    all appropriate plots.

    The line enabling auto-scaling in the batch control file should be:

	AutoScale:

    If the user wants only a selected subset of plots auto-scaled, then
    the Plot Configuration File must have previously been set up, by the
    interactive version of SDT (and the Limits Setup Box), so that only
    the selected plots will be auto-scaled, and the Batch Control File
    should NOT include an AutoScale line.

22.  IDL Program Lines.

    The batch version of SDT can be used to load data into a list of
    IDL programs.  These IDL program continue to run in batch mode,
    concurrently - that is, they are all started at the same time
    by the batch program and run at the same time.   This concurrency
    means that the user should be wary of the amount of memory that
    will be required by the list of IDL programs.

    Each IDL program should be represented by a line, in the Batch
    Control File, of the form:

	IDL:   path_to_idl_program

    where "path_to_idl_program" would be the full pathname of the IDL
    program to be run.

    NOTE that there is a maximum of 200 IDL lines.

23.  ColorMap Control Line.

    As of September 1998, the color table to be used in generating
    Spectrogram plots in the batch version of SDT can be modified
    by including a line of one of the following forms:

	ColorMap:  color_table_name

            where "color_table_name" can be one of:

                DefaultColors
	        SslIdlColors
	        VioletToRed

            Note that "DefaultColors" is the same 32-color table that
	    the SDT UserInterface uses by default.

	    "SslIdlColors" is a 240-color table that is used at SSL
	    by IDL programmers.

	    "VioletToRed" is a 255-color table that smoothly changes
	    from Violet to Blue to Green to Yellow to Orange to Red.

    or:

	ColorMap:  GrayScale   nshades

            where "nshades" is the number of shades of gray to
	    put into the Gray scale color table.   In this table,
	    color "0" will be BLACK and color "nshades-1" will be
	    WHITE.

    or:

	ColorMap:  ReverseGrayScale   nshades

            where "nshades" is the number of shades of gray to
	    put into the Gray scale color table.   In this table,
	    color "0" will be WHITE and color "nshades-1" will be
	    BLACK.

    The "GrayScale" and "ReverseGrayScale" color tables are useful
    for investigators who wish to plot spectrograms, but wish to
    avoid the expense of color printing.

    Please be aware that all of these color tables, including the
    "GrayScale" and "ReverseGrayScale" entries, only work with
    color types of output - in particular:

	ColorPostScript
	ColorPostScriptL2
	ColorGIF

    Eventually, the two "GrayScale" options will be made to work
    with "PostScript", but, as of September 1998, "PostScript" only
    utilizes a two-color table.  So use of any of these color tables
    is of no use for the "PostScript" output type.

24. Spectrogram Background to White

    A user may wish to have spectrograms output on the printer with
    white backgrounds instead of the normal DISPLAY background (usually
    a color).  This has the advantage of saving ink and possibly making
    the plots easier to look at.  To turn ON white backgrounds for
    spectrograms, include the following line:

	SpectrogramBackgroundWhite:

25. "DataBaseRequest" line.

    As of June 2005, a feature exists in "sdt_batch" which makes
    it much easier to request FAST data, by orbit or timespan,
    without requiring knowledge of data location.  It internally
    works much like interactive SDT does in conjunction with the
    "datamgr" program, in which a user, with a Fast SDT plot
    configuration read into SDT, invokes "datamgr" and requests
    either an orbit or a timespan.  In "sdt_batch" for Fast, this
    feature does not require that requested orbit or timespan data
    be available on local disks.  Any data that is not locally
    available will be downloaded from Fast servers elsewhere, into
    temporary sub-directories of the user's "DATA_DIR" location.
    Once all of the data for the orbit or timespan is available,
    the batch job will procede with that orbit or timespan.  When
    finished with the orbit or timespan, "sdt_batch" will delete
    any temporary data files that were downloaded from remote sites.

    To use the feature, add the line:

	DataBaseRequest:

    to the batch control file, and follow it with lines of any
    of the following example formats:

	  Orbit  21501 21815
 
	  Orbits  25001 - 25100

	  Orbits  28001 - 28101 X 3

	  Orbits  29001 - 29047 / 11

	  TimeSpan:  1997/02/17  02:45:17  02:45:26.350

   The FIRST format informs "sdt_batch" that orbits 21501 and 21815
   should be processed, separately.

   The SECOND format informs "sdt_batch" that all orbits between and
   including 25001 and 25100 should be processed separately.

   The THIRD format informs "sdt_batch" that all orbits between and
   including 28001 and 28101 should be processed three at a time.
   So, orbits 28001-28003 will be processed together,
   orbits 28004-28006 will be processed together,
	     .
	     .
	     .
   orbits 28097-28099 will be processed together,
   orbits 28100-28101 will be processed together,

   The FOURTH format informs "sdt_batch" that every 11'th orbit between
   and including 29001 and 29047 will be processed (separately).  So,
   orbits:  29001, 29012, 29023, 29034, 29045 will be processed.

   The LAST format informs "sdt_batch" that the timespan shown
   should be processed.

   Any number of these lines, and of any of the four types, can be
   included.

   As of June 2005, this feature has yet to be implemented for
   POLAR and CLUSTER, although it is planned to do so eventually.
   In this case, the data will be found from the "polar.cfg"
   and "cluster.cfg" listings, since there is no mission database
   to make use of.



Other Batch Control File Notes:

   Any line beginning with the Number-sign (#) is ignored.

   In the case of DataDirectory and TimeSpan filenames, environment
   variables may be used as, for instance, in the following
   Data Directory Line:

       DataDirectory:  $WIND_DATA_DISK/may1995

   If the Plot OutputFile Line and the Printer Identification Line are
   both included in the Batch Control File, then plot output will be
   sent to both destinations.


EXAMPLE:
-------

The following is a sample FAST Batch Control File.  Note that there
must exist the following SDT configuration file for this to work:

    /disks/bishma/disk4/sdt/tmp/UIcfg.HKSurv1

Also note that this program feeds the data into the IDL program:

    /disks/local/idl/idl_fft.pro


BatchJob:  HouseKeepingSurvey
Printer:  spp1
Output:   PostScript
PlotsPerPage: 8
PageSize:   ASize
Orientation:  portrait
PageTag:   "FAST Housekeeping Survey"
PlotLength:  200 millimeters

# NoPlots

DataDirectory:  /disks/bishma/disk1/sdt/fast_lzp
# TimeSpan:     $FFF1
TimeSpan:     fast_lzp_DSS-16_orbit0025_r
TimeSpan:     fast_lzp_DSS-85_orbit0029_r

PlotConfigurationDir:   /disks/bishma/disk4/sdt/tmp
PlotConfigurationFile:  HKSurv1
IDL:  /disks/local/idl/idl_fft.pro


ANOTHER EXAMPLE:
--------------

The following example shows how to output to a PostScript printer as
well as an appropriate series of GIF files, with the dates of the time
spans stamped in the names.  It also shows usage of multiple data-
directory, timespan groups.  Note that the resulting "gif" files will
have the names:

    PlotGif19960501
    PlotGif19960521
    PlotGif19960601
    PlotGif19960602
    PlotGif19960603
    PlotGif19960604



BatchJob:  POLAR_Summary
Printer:  spp1
Output:   PostScript
FileDestination:  PlotGif  GIF  ByDate
PlotsPerPage: 6
PageSize:   ASize
Orientation:  portrait
PageTag:   "Two types of output"

DataDirectory:  /disks/willow/disk2/sdt/PolarData/May1996
TimeSpan: 1996/05/01  04:00:00  12:00:00
TimeSpan: 1996/05/21  09:00:00  18:00:00

DataDirectory:  /disks/willow/disk2/sdt/PolarData/June1996
TimeSpan: 1996/06/01  00:00:00  24:00:00
TimeSpan: 1996/06/02  00:00:00  24:00:00
TimeSpan: 1996/06/03  00:00:00  24:00:00
TimeSpan: 1996/06/04  00:00:00  24:00:00

PlotConfigurationDir:  /disks/polar4/disk1/jackv/sdt
PlotConfigurationFile:  AAA0



A Fast "DataBaseRequest" EXAMPLE:
--------------------------------

This is an example of requesting FAST orbit processing:

BatchJob:  dbase_test
Printer:  lp
Output:   ColorPostScriptL2
PlotsPerPage: 8
PageSize:   ASize
Orientation:  portrait
PageTag:  dbase_test 
 
DataBaseRequest:
    TimeSpan:  1998/10/25  18:00:00  23:30:00
    Orbits 1942 1944
    Orbits 32001 - 33000
    Orbits 33001 - 33020 X 4

PlotConfigurationDir: /disks/fast/configurations
PlotConfigurationFile:  fast_summary_plot_config
